buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'

group = 'com.github.ConnectSDK'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "check") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    getClassDirectories().setFrom(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs.from = android.sourceSets.main.java.srcDirs
    sourceDirectories.from = android.sourceSets.main.java.srcDirs
    executionData.from = 'build/jacoco/testDebug.exec'
    tasks.withType(Test).tap {
        configureEach {
            reports {
                xml.required.set(true)
                html.required.set(true)
            }
        }
    }
}

build.dependsOn jacocoTestReport

android {

    buildFeatures {
        renderScript true
        aidl true
    }
    namespace = "com.connectsdk"
    compileSdkVersion 34
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 14
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                    'src',
                    'core/src',
            ]
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = [
                    'core/test/src',
            ]
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
        }
    }
}

android.testOptions.unitTests.all {
    include '**/*Test.class'
}

dependencies {

    implementation 'com.android.support:support-v4:22.2.1'
    implementation 'com.android.support:appcompat-v7:22.2.1'
    implementation 'com.googlecode.plist:dd-plist:1.23'
//    implementation 'com.nimbusds:srp6a-android:2.0.2'
    implementation 'net.i2p.crypto:eddsa:0.2.0'
    implementation files('core/libs/android-smartview-sdk-2.5.1.jar')
    implementation files('core/libs/srp6a-2.0.2.jar')
    implementation 'org.java-websocket:Java-WebSocket:1.5.1'

    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:2.4'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.2'
    testImplementation 'xmlunit:xmlunit:1.4'
}
